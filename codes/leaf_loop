#!/bin/bash
set -e

LeafcutterLocDefault=~/leafcutter/
LengthMaximumDefault=100000
MinimumClusteringDefault=30
OutputDirectoryDefault=~/leaf_out/
OutputPrefixDefault=leafcutter
PCDefault=10
RatioMinimumDefault=0.001

#should offer sample list as an option for flexibility

while :
do
    case "$1" in
      -i | --inputdirectory) #Directory containing the star alignment files (assumes individual sample directories)
      	  InputDirectory="$2"
	  shift 2
	  ;;
      -l | --lengthmaximum) #maximum length of introns to be used in clustering
      	  LengthMaximum="$2"
	  shift 2
	  ;;
      -m | --minimumclustering) #Minimum number of reads that define a cluster
      	  MinimumClustering="$2"
	  shift 2
	  ;;
      -p | --prefix) #prefix of output
      	  OutputPrefix="$2"
	  shift 2
	  ;;
      -pc | --principalcomponents) #How many PCs do you wish to generate
	  PC="$2"
	  shift 2
	  ;;
      -r | --ratiominimum) #The minimum ratio of reads that must map to support a cluster
      	  RatioMinimum="$2"
	  shift 2
	  ;;
      -s | --samplelist) 
      	  SampleList="$2"
	  shift 2
	  ;;
      -w | --writeto) #write leafcutter clustering to this directory
      	  OutputDirectory="$2"
	  shift 2
      	  ;;
      -*) #unknown 
	  echo "Error: Unknown option: $1" >&2
	  exit 1
	  ;;
      *)  # No more options
	  shift
	  break
	  ;;
     esac
done



#check: That all variables are set or default
echo "Using input alignments located in ${InputDirectory:?not set}"
echo "Using sample list ${SampleList:?not set}"
echo "Writing output to ${OutputDirectory:=$OutputDirectoryDefault}"
echo "Using maximum intron length of ${LengthMaximum:=$LengthMaximumDefault}"
echo "Using minimum mapping support of ${MinimumClustering:=$MinimumClusteringDefault}"
echo "Using minimum proportion support of ${RatioMinimum:=$RatioMinimumDefault}"
echo "Using counts tag of ${OutputPrefix:=$OutputPrefixDefault}"
echo "Calculating ${PC:=$PCDefault} PC(s)"



PATH=$PATH:"${LeafcutterLoc}"/scripts

#should add a check for if a particular sample has already had junction files made for it and skip it

if [ -d "${OutputDirectory}" ]
then 
	rm -rf "${OutputDirectory}"
fi 

mkdir "${OutputDirectory}"juncfiless # make a directory where the outputs will go - also update as an option

cat "${SampleList}" | while read line #iterate through the list
do
	Sample=$( echo "${line}" | cut -f 1 -d$'\t' )
	echo Converting "${Sample}" associated Aligned.out.bam to "${Sample}.junc"
	sh $LeafcutterLoc/scripts/bam2junc.sh "${InputDirectory}""${Sample}_star"/Aligned.out.bam "${OutputDirectory}""${Sample}.junc"
	echo "${Sample}.junc" >> "${OutputDirectory}"/juncfiles.txt
done

python "${LeafcutterLoc}"/clustering/leafcutter_cluster.py -j "${OutputDirectory}"/juncfiles.txt -m "${MinimumClustering}" -o "${OutputPrefix}" -l "${LengthMaximum}" -r "${OutputDirectory}" -p "${RatioMinimum}"
zcat "${OutputDirectory}"/"${OutputPrefix}_perind.counts.gz" | grep "chr" > "${OutputDirectory}"/"${OutputPrefix}"_filtered_perind.counts.gz #filtering step - removes unmapped loci that woukld break leafcutter
#note this line requires full path
/usr/local/bin/anaconda2/bin/python "${LeafcutterLoc}"/scripts/prepare_phenotype_table.py "${OutputDirectory}"/"${OutputPrefix}"_filtered_perind.counts.gz -p "${PC}"
